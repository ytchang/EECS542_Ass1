function cost = deformation_cost( Li,p_i,Lj,p_j )
    % L --> [x, y, theta, scale]  end points of the query stick  
    % pi,pj is the query part, 1=torso, 2=left upper arm, 3=right upper arm, 4=left lower arm, 5=right lower arm, 6= head
    % w is weight for x,y,theta,scale. x,y here refers to joint distance
    w=[50,50,1,50];
    model_len=[160, 95,95,65,65,60];
    %% make sure pi<pj
    if p_i>pj
        temp=Li;
        Li=Lj;
        Lj=temp;
        temp=pi;
        pi=pj;
        pj=temp;
    end
    %% get end points
    halfLen_i=Li(4)*model_len(pi)/2;
    halfLen_j=Lj(4)*model_len(pj)/2;
    slope_i=tan(Li(3));
    slope_j=tan(Lj(3));

    if slope_i==0
        p1_i=[Li(1)+halfLen_i, Li(2)];
        p2_i=[Li(1)-halfLen_i, Li(2)];
    else
        %half stick length if y diff is 1
        unitXLen_i=sqrt(1+1/slope_i*slope_i);
        %get y diff
        dy_i=halfLen_i/unitXLen_i;
        %get end points points(p1 upper, p2 lower)
        p1_i=[Li(1)+dy_i/slope_i, Li(2)+dy_i];
        p2_i=[Li(1)-dy_i/slope_i, Li(2)-dy_i];
    end

    if slope_j==0
        p1_j=[Lj(1)+halfLen_j, Lj(2)];
        p2_j=[Lj(1)-halfLen_j, Lj(2)];
    else
        unitXLen_j=sqrt(1+1/slope_j*slope_j);
        dy_j=halfLen_j/unitXLen_j;
        p1_j=[Lj(1)+dy_j/slope_j, Lj(2)+dy_j];
        p2_j=[Lj(1)-dy_j/slope_j, Lj(2)-dy_j];
    end
    %% get joint location
    shoulderWidth=90;
    if pi==1&&pj==6
        joint_i=p1_i;
        joint_j=p2_j;
        ideal_theta=0;
    elseif pi==1&&pj==2
        joint_i=p1_i;
        joint_i(1)=joint_i(1)-shoulderWidth/2;
        joint_j=p1_j;
        ideal_theta=0;
    elseif pi==1&&pj==4
        joint_i=p1_i;
        joint_i(1)=joint_i(1)+shoulderWidth/2;
        joint_j=p1_j; 
        ideal_theta=0;
    elseif pi==2&&pj==3
        joint_i=p2_i;
        joint_j=p1_j;
        ideal_theta=0;
    elseif pi==4&&pj==5
        joint_i=p2_i;
        joint_j=p1_j; 
        ideal_theta=0;
    end
   %%
 cost=w(1)*abs(joint_i(1)-joint_j(1))...
     +w(2)*abs(joint_i(1)-joint_j(1))...
     +w(3)*abs(Li(3)-Lj(3)-ideal_theta)...
     +w(4)*abs(log(Li(4))-log(Lj(4)));
end

